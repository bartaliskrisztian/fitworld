@page "/addClient"
@inject ClientService objClientService
@inject MembershipService membershipService;
@inject ClientMembershipService clientMembershipService;
@inject NavigationManager NavigationManager
@inject IToastService toastService

<h3>Add Client</h3>

<form>
    <div class="form-group">
        <label for="Name" class="control-label">Name</label>
        <input form="Name" class="form-control" @bind="@client.Name" />
    </div>
    <div class="form-group">
        <label for="Phone" class="control-label">Phone number</label>
        <input form="phone" class="form-control" @bind="@client.Phone_number" />
    </div>
    <div class="form-group">
        <label for="Email" class="control-label">Email</label>
        <input form="Email" class="form-control" @bind="@client.Email" />
    </div>
    <div class="form-group">
        <label for="Pin" class="control-label">PIN</label>
        <input form="Pin" class="form-control" @bind="@client.PIN" />
    </div>
    <div class="form-group">
        <label for="Address" class="control-label">Address</label>
        <input form="Address" class="form-control" @bind="@client.Address" />
    </div>
    <div class="form-group">
        <label for="membership" class="control-label">Membership</label>
        <select form="membership" class="form-control" @bind="@selectedMembershipIndex">
            @foreach (var memShip in memShips)
            {
                <option value="@memShip.Id">@memShip.Name</option>
            }
        </select>
    </div>
    <div class="form-group">
        <!-- <label for="Picture" class="control-label">Picture</label>
        <input form="Picture" class="form-control" type="file" accept="image/*" capture @bind="@clientPhoto" />-->
        <canvas></canvas>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateClient" value="Add client" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    Client client = new Client();
    int newClientId;
    List<Membership> memShips = new List<Membership>();
    int selectedMembershipIndex;

    protected override async Task OnInitializedAsync()
    {
        memShips = await Task.Run(() => membershipService.GetMemberships());
    }

    protected void CreateClient()
    {

        string bar_code = Guid.NewGuid().ToString();
        DateTime current_date = DateTime.Now;

        client.Bar_code = bar_code;
        client.Inserted_date = current_date;

        CreateClientMembership();
        newClientId = objClientService.AddClient(client);

        toastService.ShowInfo("Client added successfully.");
        NavigationManager.NavigateTo("clients");
    }

    protected void CreateClientMembership()
    {
        ClientMembership clientMembership = new ClientMembership();
        Membership selectedMembership = memShips[selectedMembershipIndex];
        DateTime current_date = DateTime.Now;
        string bar_code = Guid.NewGuid().ToString();

        clientMembership.Client_Id = newClientId;
        clientMembership.Membership_Id = selectedMembership.Id;
        clientMembership.Buying_Date = current_date;
        clientMembership.Bar_Code = bar_code;
        clientMembership.Price = selectedMembership.Price;
        clientMembership.Available_until = current_date.AddDays(selectedMembership.Days_available);
        clientMembership.First_Usage_Date = current_date;
        clientMembership.Gym_Id = selectedMembership.Gym_id;

        clientMembershipService.AddClientMembership(clientMembership);
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("clients");
    }
}
